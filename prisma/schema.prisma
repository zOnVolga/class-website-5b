// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  email           String?  @unique
  phone           String?  @unique
  fullName        String
  passwordHash    String
  role            UserRole @default(STUDENT)
  isActive        Boolean  @default(true)
  isVerified      Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  lastLoginAt     DateTime?
  
  // Relations
  loginAttempts   LoginAttempt[]
  sessions        Session[]
  verificationCodes VerificationCode[]
  pushSubscriptions PushSubscription[]
  
  @@map("users")
}

model PushSubscription {
  id           String   @id @default(cuid())
  userId       String
  endpoint     String
  p256dhKey    String
  authKey      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, endpoint])
  @@map("push_subscriptions")
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  refreshToken String   @unique
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("sessions")
}

model LoginAttempt {
  id        String   @id @default(cuid())
  userId    String
  ipAddress String?
  userAgent String?
  success   Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("login_attempts")
}

model VerificationCode {
  id        String   @id @default(cuid())
  userId    String
  code      String
  type      VerificationType
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, code, type])
  @@map("verification_codes")
}

enum UserRole {
  ADMIN
  TEACHER
  STUDENT
  PARENT
}

enum VerificationType {
  PHONE_VERIFICATION
  PASSWORD_RESET
  TWO_FACTOR_AUTH
}